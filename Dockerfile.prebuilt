# Dockerfile für Pre-Built Ticketsystem
# Verwendet bereits lokal erstellte Builds für schnellere Container-Erstellung

FROM node:20-alpine AS base
WORKDIR /app

# Install production dependencies
FROM base AS deps
RUN apk add --no-cache libc6-compat
COPY package.json package-lock.json* ./
# Nur Production Dependencies für den Container
RUN npm ci --only=production && npm cache clean --force

# Production runner
FROM base AS runner
RUN apk add --no-cache curl wget

WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

# Create system user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Create directories for uploads and data
RUN mkdir -p /app/uploads /app/data
RUN chown nextjs:nodejs /app/uploads /app/data

# Copy production dependencies
COPY --from=deps /app/node_modules ./node_modules

# Copy pre-built application
COPY --chown=nextjs:nodejs .next/standalone ./
COPY --chown=nextjs:nodejs .next/static ./.next/static
COPY --chown=nextjs:nodejs public ./public

# Copy package.json for runtime
COPY package.json ./

USER nextjs

EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

CMD ["node", "server.js"] 